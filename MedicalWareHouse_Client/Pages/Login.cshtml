@page
@model LoginModel
@{
    ViewData["Title"] = "Đăng Nhập";
    Layout = null;
}
@if (TempData["RegisterSuccessMessage"] != null)
{
    <div id="successPopup" class="popup success">
        <i class="fas fa-check-circle mr-2 animate-bounce-subtle"></i>
        @TempData["RegisterSuccessMessage"]
    </div>
}
@if (TempData["LoginErrorMessage"] != null)
{
    <div id="errorPopup" class="popup error">
        <i class="fas fa-exclamation-circle mr-2 animate-pulse"></i>
        @TempData["LoginErrorMessage"]
    </div>
}
<style>
    .popup {
        position: fixed;
        top: 20px;
        right: 20px;
        padding: 15px 20px;
        border-radius: 16px;
        color: white;
        font-weight: 500;
        font-size: 16px;
        z-index: 1000;
        opacity: 1;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
        backdrop-filter: blur(10px);
        transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        transform: translateX(0);
        display: flex;
        align-items: center;
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .success {
        background-color: rgba(16, 185, 129, 0.9);
    }

    .error {
        background-color: rgba(239, 68, 68, 0.9);
    }

    .popup.fade-out {
        opacity: 0;
        transform: translateX(30px);
    }

    :root {
        --primary-color: #6366f1;
        --primary-hover: #4f46e5;
        --primary-light: #e0e7ff;
        --primary-dark: #4338ca;
        --accent-color: #8b5cf6;
        --accent-light: #ddd6fe;
        --gray-50: #f9fafb;
        --gray-100: #f3f4f6;
        --gray-800: #1f2937;
    }

    /* Utilities */
    .animate-bounce-subtle {
        animation: bounce-subtle 2s infinite;
    }

    .animate-float {
        animation: float 6s ease-in-out infinite;
    }

    .animate-float-delay {
        animation: float 6s ease-in-out 2s infinite;
    }

    .animate-pulse {
        animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    }

    @@keyframes bounce-subtle {
        0%, 100% { transform: translateY(0); }
        50% { transform: translateY(-3px); }
    }

    @@keyframes float {
        0% { transform: translateY(0px) rotate(0deg); }
        50% { transform: translateY(-15px) rotate(2deg); }
        100% { transform: translateY(0px) rotate(0deg); }
    }

    @@keyframes pulse {
        0%, 100% { opacity: 1; }
        50% { opacity: 0.7; }
    }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Medical Warehouse</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Outfit:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: 'Outfit', sans-serif;
            min-height: 100vh;
            position: relative;
            overflow: hidden;
            background: #0f172a;
            color: #f8fafc;
        }

        /* Advanced Background with 3D depth */
        .bg-gradient {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: 
                radial-gradient(circle at 10% 10%, rgba(129, 140, 248, 0.1), transparent 40%),
                radial-gradient(circle at 90% 90%, rgba(168, 85, 247, 0.12), transparent 40%),
                radial-gradient(circle at 50% 50%, rgba(49, 46, 129, 0.9), rgba(15, 23, 42, 1));
            z-index: -20;
        }

        /* Floating particles */
        .particle {
            position: absolute;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(5px);
            z-index: -10;
        }

        .particle::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            border-radius: 50%;
            background: radial-gradient(circle at 30% 30%, rgba(255, 255, 255, 0.2), transparent);
        }

        /* Neo-morphic Card */
        .neo-card {
            background: rgba(30, 41, 59, 0.7);
            backdrop-filter: blur(15px);
            border-radius: 30px;
            box-shadow: 
                0 30px 60px rgba(0, 0, 0, 0.25),
                inset 0 1px 1px rgba(255, 255, 255, 0.1),
                inset 0 -1px 1px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.05);
            transition: transform 0.5s cubic-bezier(0.34, 1.56, 0.64, 1),
                        box-shadow 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
            overflow: hidden;
            position: relative;
        }

        .neo-card:hover {
            transform: translateY(-10px) scale(1.01);
            box-shadow: 
                0 40px 80px rgba(0, 0, 0, 0.4),
                inset 0 1px 1px rgba(255, 255, 255, 0.1),
                inset 0 -1px 1px rgba(0, 0, 0, 0.1);
        }

        /* Shiny overlay effect */
        .neo-card::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(
                45deg,
                transparent 0%,
                rgba(255, 255, 255, 0.03) 40%,
                rgba(255, 255, 255, 0.04) 50%,
                rgba(255, 255, 255, 0.03) 60%,
                transparent 100%
            );
            transform: rotate(45deg);
            z-index: 1;
            transition: transform 0.5s;
        }

        .neo-card:hover::before {
            transform: rotate(45deg) translate(100%, 100%);
        }

        /* Logo holder with glow effect */
        .logo-container {
            position: relative;
            perspective: 800px;
        }

        .logo-holder {
            position: relative;
            background: linear-gradient(145deg, rgba(79, 70, 229, 0.1), rgba(99, 102, 241, 0.05));
            border-radius: 50%;
            padding: 1.25rem;
            box-shadow: 
                0 20px 25px -5px rgba(0, 0, 0, 0.1),
                0 10px 10px -5px rgba(0, 0, 0, 0.04),
                inset 0 1px 1px rgba(255, 255, 255, 0.1);
            display: flex;
            align-items: center;
            justify-content: center;
            transform-style: preserve-3d;
            border: 1px solid rgba(255, 255, 255, 0.1);
            transition: transform 0.6s ease-out;
        }

        .logo-holder:hover {
            transform: rotateY(15deg) rotateX(15deg);
        }

        /* Logo glow effect */
        .logo-glow {
            position: absolute;
            width: 100%;
            height: 100%;
            border-radius: 50%;
            background: radial-gradient(circle, var(--accent-light) 0%, transparent 70%);
            opacity: 0.3;
            z-index: -1;
            filter: blur(20px);
            animation: glow 3s infinite alternate;
        }

        @@keyframes glow {
            0% { opacity: 0.2; transform: scale(1); }
            100% { opacity: 0.5; transform: scale(1.1); }
        }

        /* Fancy input fields */
        .input-wrapper {
            position: relative;
            margin-bottom: 1.5rem;
        }

        .fancy-input {
            width: 100%;
            background: rgba(15, 23, 42, 0.5);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 12px;
            padding: 1rem 1rem 1rem 3rem;
            color: #f8fafc;
            font-size: 1rem;
            transition: all 0.3s ease;
            backdrop-filter: blur(4px);
            box-shadow: 
                inset 0 2px 4px rgba(0, 0, 0, 0.2),
                0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .fancy-input:focus {
            outline: none;
            background: rgba(15, 23, 42, 0.7);
            border-color: rgba(129, 140, 248, 0.6);
            box-shadow: 
                0 0 0 3px rgba(99, 102, 241, 0.2),
                inset 0 2px 4px rgba(0, 0, 0, 0.2);
        }

        .fancy-input::placeholder {
            color: rgba(255, 255, 255, 0.4);
        }

        .input-icon {
            position: absolute;
            left: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: rgba(255, 255, 255, 0.4);
            transition: all 0.3s ease;
        }

        .fancy-input:focus + .input-icon {
            color: var(--accent-color);
        }

        /* Fancy button */
        .gradient-btn {
            position: relative;
            width: 100%;
            padding: 1rem 1.5rem;
            background: linear-gradient(135deg, var(--primary-color), var(--accent-color));
            border: none;
            border-radius: 12px;
            color: white;
            font-weight: 600;
            font-size: 1.125rem;
            cursor: pointer;
            overflow: hidden;
            box-shadow: 0 4px 20px rgba(99, 102, 241, 0.5);
            transition: all 0.4s ease;
            z-index: 1;
            letter-spacing: 0.5px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .gradient-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, var(--accent-color), var(--primary-dark));
            opacity: 0;
            z-index: -1;
            transition: opacity 0.4s ease;
        }

        .gradient-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 25px rgba(99, 102, 241, 0.6);
        }

        .gradient-btn:hover::before {
            opacity: 1;
        }

        .gradient-btn:active {
            transform: translateY(-1px);
            box-shadow: 0 5px 15px rgba(99, 102, 241, 0.4);
        }

        /* Button glow effect on hover */
        .gradient-btn::after {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255, 255, 255, 0.3) 0%, transparent 70%);
            opacity: 0;
            transition: opacity 0.4s ease;
            pointer-events: none;
        }

        .gradient-btn:hover::after {
            opacity: 1;
        }

        /* Fancy links */
        .fancy-link {
            position: relative;
            color: var(--accent-light);
            font-weight: 600;
            text-decoration: none;
            transition: all 0.3s ease;
            padding: 0 0.2rem;
        }

        .fancy-link::after {
            content: '';
            position: absolute;
            bottom: -2px;
            left: 0;
            width: 0;
            height: 2px;
            background: linear-gradient(to right, var(--primary-color), var(--accent-color));
            transition: width 0.3s ease;
        }

        .fancy-link:hover {
            color: white;
        }

        .fancy-link:hover::after {
            width: 100%;
        }

        /* Advanced reveal animations */
        .reveal-animation {
            opacity: 0;
            transform: translateY(30px);
        }

        .title-text {
            background: linear-gradient(135deg, #a5b4fc, #c4b5fd);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            text-fill-color: transparent;
            font-weight: 700;
        }

        /* Validation message */
        .validation-message {
            color: #f87171;
            font-size: 0.875rem;
            margin-top: 0.5rem;
            display: block;
            font-weight: 500;
            background-color: rgba(248, 113, 113, 0.1);
            padding: 0.5rem;
            border-radius: 8px;
            border-left: 3px solid #ef4444;
        }

        /* Card divider with gradient */
        .card-divider {
            height: 1px;
            width: 100%;
            background: linear-gradient(to right, 
                transparent, 
                rgba(255, 255, 255, 0.1), 
                transparent);
            margin: 2rem 0;
        }

        /* Custom scrollbar */
        ::-webkit-scrollbar {
            width: 6px;
        }

        ::-webkit-scrollbar-track {
            background: rgba(15, 23, 42, 0.6);
        }

        ::-webkit-scrollbar-thumb {
            background: rgba(99, 102, 241, 0.6);
            border-radius: 3px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: rgba(99, 102, 241, 0.8);
        }
    </style>
</head>
<body class="flex items-center justify-center p-6">
    <!-- Background elements -->
    <div class="bg-gradient"></div>
    
    <!-- Floating particles -->
    <div class="particle animate-float" style="width: 100px; height: 100px; top: 15%; left: 10%;"></div>
    <div class="particle animate-float-delay" style="width: 60px; height: 60px; top: 60%; left: 5%;"></div>
    <div class="particle animate-float" style="width: 80px; height: 80px; top: 70%; right: 10%;"></div>
    <div class="particle animate-float-delay" style="width: 40px; height: 40px; top: 30%; right: 15%;"></div>
    <div class="particle animate-float" style="width: 120px; height: 120px; top: 40%; left: 60%; opacity: 0.05;"></div>

    <div class="neo-card p-10 w-full max-w-md relative z-10">
        <!-- Card content -->
        <div class="logo-container flex flex-col items-center justify-center mb-12 reveal-animation" id="logo-section">
            <div class="logo-holder mb-6">
                <img src="https://tse4.mm.bing.net/th?id=OIP.3oszMYIezXLzgT1X9jqc0AHaHa&w=474&h=474&c=7" alt="Medical Warehouse Logo" class="w-24 h-24" />
                <div class="logo-glow"></div>
            </div>
            <h1 class="text-3xl font-bold title-text mb-2">Medical Warehouse</h1>
            <p class="text-gray-400 text-center">Chào mừng trở lại! Đăng nhập để tiếp tục.</p>
        </div>

        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
        {
            <div class="bg-red-900 bg-opacity-30 text-red-300 p-4 rounded-xl mb-8 flex items-center space-x-3 border border-red-800 reveal-animation">
                <div class="bg-red-500 bg-opacity-20 p-2 rounded-full">
                    <i class="fas fa-exclamation-circle text-red-400"></i>
                </div>
                <p>@Model.ErrorMessage</p>
            </div>
        }

        <form method="post" class="space-y-8">
            <div class="reveal-animation" id="email-field">
                <label asp-for="Input.Email" class="block text-gray-300 font-medium mb-2">Email</label>
                <div class="input-wrapper">
                    <input asp-for="Input.Email" class="fancy-input" placeholder="VD: example@email.com" />
                    <i class="fas fa-envelope input-icon"></i>
                </div>
                <span asp-validation-for="Input.Email" class="validation-message"></span>
            </div>
            
            <div class="reveal-animation" id="password-field">
                <label asp-for="Input.Password" class="block text-gray-300 font-medium mb-2">Mật Khẩu</label>
                <div class="input-wrapper">
                    <input asp-for="Input.Password" type="password" class="fancy-input" placeholder="Nhập mật khẩu của bạn" />
                    <i class="fas fa-lock input-icon"></i>
                </div>
                <span asp-validation-for="Input.Password" class="validation-message"></span>
            </div>

            <div class="reveal-animation pt-4" id="button-section">
                <button type="submit" class="gradient-btn">
                    <i class="fas fa-sign-in-alt mr-2"></i>Đăng nhập
                </button>
            </div>
        </form>

        <div class="card-divider"></div>

        <div class="text-center reveal-animation" id="footer-section">
            <p class="text-gray-400">
                Bạn là người mới? 
                <a href="/Register" class="fancy-link">Đăng ký tài khoản</a>
            </p>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>

    <script>
        // Enhanced popup animation
        setTimeout(function () {
            var popups = document.querySelectorAll(".popup");
            popups.forEach(function (popup) {
                popup.classList.add("fade-out");
                setTimeout(() => popup.remove(), 600);
            });
        }, 5000);

        // GSAP animations
        document.addEventListener('DOMContentLoaded', function() {
            // Sequential reveal animations
            gsap.to("#logo-section", {
                opacity: 1,
                y: 0,
                duration: 0.8,
                ease: "back.out(1.7)"
            });
            
            gsap.to("#email-field", {
                opacity: 1,
                y: 0,
                duration: 0.8,
                delay: 0.3,
                ease: "back.out(1.7)"
            });
            
            gsap.to("#password-field", {
                opacity: 1,
                y: 0,
                duration: 0.8,
                delay: 0.5,
                ease: "back.out(1.7)"
            });
            
            gsap.to("#button-section", {
                opacity: 1,
                y: 0,
                duration: 0.8,
                delay: 0.7,
                ease: "back.out(1.7)"
            });
            
            gsap.to("#footer-section", {
                opacity: 1,
                y: 0,
                duration: 0.8,
                delay: 0.9,
                ease: "back.out(1.7)"
            });

            // 3D tilt effect for the card
            const card = document.querySelector('.neo-card');
            
            card.addEventListener('mousemove', e => {
                const rect = card.getBoundingClientRect();
                const x = e.clientX - rect.left;
                const y = e.clientY - rect.top;
                
                const xPercent = x / rect.width - 0.5;
                const yPercent = y / rect.height - 0.5;
                
                const rotateX = yPercent * -8;
                const rotateY = xPercent * 8;
                
                card.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) translateY(-10px)`;
            });
            
            card.addEventListener('mouseleave', () => {
                card.style.transform = '';
            });
        });
    </script>
</body>
</html>
